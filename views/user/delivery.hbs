<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>

<style>
	'
.coordinates {
		background: rgba(0, 0, 0, 0.5);
		color: #fff;
		position: absolute;
		bottom: 40px;
		left: 10px;
		padding: 5px 10px;
		margin: 0;
		font-size: 11px;
		line-height: 18px;
		border-radius: 3px;
		display: none;
	}
</style>
<nav class="navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light" id="ftco-navbar">
	<div class="container">
		<h3 style="color: #fff; font-family: 'Times New Roman', Times, serif;"><a href="/" style="color: white; text-decoration: none;">Car<span
				style="color: skyblue;"><b>-Zy</b></span></a></h3>
	</div>
</nav>

<div class="container">
	<div class="row mt-4">
		<div class="col-12 col-md-11 col-lg-5 col-10">
			<div>
				<div class="card">
					<img class="card-img-top" src="/carimages/{{car._id}}1.jpg" alt="Card image cap">
					<div class="card-body">
						<h5 class="card-title">{{car.Brand}} {{car.Name}}</h5>
						<p class="card-text" style="color: red;"> You will be charged extra fifty for delivery</p>
					</div>
					<ul class="list-group list-group-flush">
						<li class="list-group-item"><b> Price : </b><span style="color: red;"><b>â‚¹</b> {{car.Price}}
							</span>
						</li>
						<li class="list-group-item">Start date :{{bookingdetails.pickupDate}}
							{{bookingdetails.pickuptime}}</li>
						<li class="list-group-item">End date :{{bookingdetails.dropoffDate}}
							{{bookingdetails.dropofftime}}</li>

					</ul>
					{{!-- <div class="card-body">
						<a href="#" class="card-link">Card link</a>
						<a href="#" class="card-link">Another link</a>
					</div> --}}
				</div>
			</div>
		</div>
		<div class=" col-12 col-md-11 col-lg-7 col-9 ">
			<div class="hp-call hp-right-com">
				<div id='map' style='width: 100%; height: 400px;'></div><br>
				{{!-- <h3><span style="font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">

					</span></h3> --}}
				<p id="coordinates" class="coordinates" hidden></p>
				<p id="coordinates1" class="coordinates" hidden></p>
				<p id="coordinates2" class="coordinates" hidden></p>
			</div>
			<div class="card">
				<div class="card-header">
					<b> Select location on map and select payment gateway </b>

					{{!-- <b> Select location on map and select payment gateway / <a href="/payfromwalletdelivery"> pay
							from
							your wallet </a> </b> --}}



				</div>
				<ul class="list-group list-group-flush">
					{{#if wallet}}
					<li id="payment" style="display: block">
						<form id="paymentform" action="" method="post">
							<input type="radio" class="btn-check" name="paymentoptions" id="success-outlined"
								autocomplete="off" value="paypal" required>
							<label class="btn btn-outline-primary mt-2" for="success-outlined"><img
									src="/images/paypal.png" style="height: 45px; width: 150px;"></label>

							<input type="radio" class="btn-check" name="paymentoptions" id="danger-outlined"
								autocomplete="off" value="razorpay" required>
							<label class="btn btn-outline-primary mt-2" for="danger-outlined"><img
									src="/images/Razorpay.jpg" style="height: 45px; width: 150px;"></label>
							<input type="radio" class="btn-check" name="paymentoptions" id="btn-check-outlined"
								autocomplete="off" value="wallet" required>
							<label class="btn btn-outline-primary mt-2 py-3" for="btn-check-outlined"><b> pay with your
									wallet </b></label>

							<input class="btn btn-success mt-3 px-3" style="float: right; margin-right: 10px;"
								type="submit"></input>
						</form>

					</li>
					{{else}}
					<li id="payment" style="display: block">
						<form id="paymentform" action="" method="post">
							<input type="radio" class="btn-check" name="paymentoptions" id="success-outlined"
								autocomplete="off" value="paypal" required>
							<label class="btn btn-outline-primary mt-2" for="success-outlined"><img
									src="/images/paypal.png" style="height: 45px; width: 150px;"></label>

							<input type="radio" class="btn-check" name="paymentoptions" id="danger-outlined"
								autocomplete="off" value="razorpay" required>
							<label class="btn btn-outline-primary mt-2" for="danger-outlined"><img
									src="/images/Razorpay.jpg" style="height: 45px; width: 150px;"></label>
							<input type="radio" class="btn-check" name="paymentoptions" id="btn-check-outlined"
								autocomplete="off" value="wallet" disabled>
							<label class="btn btn-outline-primary mt-2 py-3" for="btn-check-outlined"><b> pay with your
									wallet </b></label>
							{{!-- <input type="radio" class="btn-check" name="paymentoptions" id="btn-check-outlined"
								autocomplete="off">
							<label class="btn btn-outline-primary mt-2 py-3" for="btn-check-outlined"><b> pay with your
									wallet </b></label> --}}

							<input class="btn btn-success mt-3 px-3" style="float: right; margin-right: 10px;"
								type="submit"></input>
						</form>

					</li>
					{{/if}}
				</ul>
			</div>
		</div>
	</div>
</div>









<script>
	mapboxgl.accessToken = 'pk.eyJ1IjoiZmFzaWx6YW1hbiIsImEiOiJja3pmZ2E4c3gwMXQwMnVwZDMydGc1ZzZxIn0.J93zOOPT74SY7s9L-0hZ5g';
	const map = new mapboxgl.Map({
		container: 'map',
		style: 'mapbox://styles/mapbox/streets-v11',
		center: [75.7673, 11.2626],
		zoom: 15
	});


	// Create a default Marker and add it to the map.
	const marker1 = new mapboxgl.Marker({ color: 'red', rotation: 0 })
		.setLngLat([75.7673, 11.2626])
		.addTo(map);

	// Create a default Marker, colored red, rotated 45 degrees.
	const marker2 = new mapboxgl.Marker({ color: 'red', rotation: 0 })
		.setLngLat([76.0711, 11.0510])
		.addTo(map);

	// Add geolocate control to the map.
	map.addControl(
		new mapboxgl.GeolocateControl({
			positionOptions: {
				enableHighAccuracy: true
			},
			// When active the map will receive updates to the device's location as it changes.
			trackUserLocation: true,
			// Draw an arrow next to the location dot to indicate which direction the device is heading.
			showUserHeading: true
		})
	);


	const marker = new mapboxgl.Marker({
		draggable: true
	})
		.setLngLat([75.7673, 11.2626])
		.addTo(map);


	function onDragEnd() {
		const lngLat = marker.getLngLat();
		coordinates.style.display = 'block';
		coordinates.innerHTML = ` ${lngLat.lng} - ${lngLat.lat}`;
		coordinates1.innerHTML = ` ${lngLat.lng}`;
		coordinates2.innerHTML = ` ${lngLat.lat}`;
	}

	marker.on('dragend', onDragEnd);
</script>

<script>



	$('#paymentform').submit((e) => {
		alert('qwertyu')
		var lon = document.getElementById('coordinates1').innerHTML
		var lat = document.getElementById('coordinates2').innerHTML
		{{!-- console.log(lon)
		alert(lon) --}}

		e.preventDefault()
		$.ajax({
			url: '/booknow',
			method: 'post',
			data: {
				details: $('#paymentform').serialize(),
				longitude: lon,
				lattitude: lat
			},
			success: (response) => {
				if (response.razorpay) {
					razorpayment(response)
				} else if (response.paypal) {
					window.location.href = response.payment
				} else if (response.wallet) {
					window.location.href = '/deliveryordersuccess'
				}
			}
		})
	})

	function razorpayment(order) {
		var options = {
			"key": "rzp_test_eLURsrDuG4E6Yb", // Enter the Key ID generated from the Dashboard
			"amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
			"currency": "INR",
			"name": "car-Zy",
			"description": "Booking Transaction",
			"image": "https://example.com/your_logo",
			"order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the previous step
			"handler": function (response) {
				{{!-- alert(response.razorpay_payment_id);
				alert(response.razorpay_order_id);
				alert(response.razorpay_signature) --}}

				verifypayment(response)
			},
			"prefill": {
				"name": "Gaurav Kumar",
				"email": "gaurav.kumar@example.com",
				"contact": "9999999999"
			},
			"notes": {
				"address": "Razorpay Corporate Office"
			},
			"theme": {
				"color": "#3399cc"
			}
		};

		var rzp1 = new Razorpay(options);
		rzp1.on('payment.failed', function (response) {
			{{!-- alert(response.error.code);
			alert(response.error.description);
			alert(response.error.source);
			alert(response.error.step);
			alert(response.error.reason);
			alert(response.error.metadata.order_id);
			alert(response.error.metadata.payment_id); --}}
		});
		rzp1.open();
		e.preventDefault();

	}
	function verifypayment(payment) {
		$.ajax({
			url: '/verifypayment',
			data: {
				payment
			},
			method: 'post',
			success: (response) => {
				if (response.status) {
					window.location.href = '/deliveryordersuccess'
				} else {
					{{!-- alert("paymentfailed") --}}
				}
			}
		})
	}

</script>